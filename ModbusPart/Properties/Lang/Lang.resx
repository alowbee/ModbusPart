<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add Device" xml:space="preserve">
    <value>增加设备</value>
  </data>
  <data name="AddCOM" xml:space="preserve">
    <value>增加COM</value>
  </data>
  <data name="AddTCP" xml:space="preserve">
    <value>增加TCP/IP</value>
  </data>
  <data name="Baudrate" xml:space="preserve">
    <value>波特率</value>
  </data>
  <data name="COM" xml:space="preserve">
    <value>通讯槽(COM)</value>
  </data>
  <data name="COM Port Amount" xml:space="preserve">
    <value>COM通讯槽数量</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>说明</value>
  </data>
  <data name="Data Bit" xml:space="preserve">
    <value>资料位元</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Delete this Port" xml:space="preserve">
    <value>删除该通道</value>
  </data>
  <data name="Deletethisdevice" xml:space="preserve">
    <value>删除此设备</value>
  </data>
  <data name="Deletethisline" xml:space="preserve">
    <value>确认删除当前行数据？</value>
  </data>
  <data name="Device Amount" xml:space="preserve">
    <value>连线设备数量</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>致能</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="ErrorRegister" xml:space="preserve">
    <value>错误暂存器</value>
  </data>
  <data name="Function" xml:space="preserve">
    <value>功能码</value>
  </data>
  <data name="GatewayName" xml:space="preserve">
    <value>通讯线名称</value>
  </data>
  <data name="IMP Slave Station" xml:space="preserve">
    <value>IMP本机从站站号</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="IP Address" xml:space="preserve">
    <value>IP地址</value>
  </data>
  <data name="IPisNull" xml:space="preserve">
    <value>未设置IP地址</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>长度</value>
  </data>
  <data name="MAddress" xml:space="preserve">
    <value>M 地址</value>
  </data>
  <data name="ModbusSetting" xml:space="preserve">
    <value>Modbus 设置</value>
  </data>
  <data name="MRegister" xml:space="preserve">
    <value>M 暂存器</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NotCorrectIP" xml:space="preserve">
    <value>当前输入文本为非法IP地址</value>
  </data>
  <data name="Parity" xml:space="preserve">
    <value>奇偶</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>通讯槽</value>
  </data>
  <data name="Protocol" xml:space="preserve">
    <value>通讯格式</value>
  </data>
  <data name="Range:0~255" xml:space="preserve">
    <value>范围:0~255</value>
  </data>
  <data name="Range:1-65535" xml:space="preserve">
    <value>范围:1-65535</value>
  </data>
  <data name="ReadLength" xml:space="preserve">
    <value>读取最大长度</value>
  </data>
  <data name="ReadRegisterMapping" xml:space="preserve">
    <value>读取记忆体配对</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>暂存器</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>重试次数</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>站号</value>
  </data>
  <data name="Stop Bit" xml:space="preserve">
    <value>停止位元</value>
  </data>
  <data name="TagAddress(Hex)" xml:space="preserve">
    <value>通讯地址(16进制)</value>
  </data>
  <data name="TagAmount" xml:space="preserve">
    <value>通讯地址数量</value>
  </data>
  <data name="TCP Port" xml:space="preserve">
    <value>网络通信槽</value>
  </data>
  <data name="TCP Port Amount" xml:space="preserve">
    <value>网络IP通讯槽数量</value>
  </data>
  <data name="Time Out" xml:space="preserve">
    <value>超时时间</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>类别</value>
  </data>
  <data name="Unit:ms" xml:space="preserve">
    <value>单位:毫秒</value>
  </data>
  <data name="Update Period" xml:space="preserve">
    <value>更新速度</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="WriteRegisterMapping" xml:space="preserve">
    <value>写入记忆体配对</value>
  </data>
</root>