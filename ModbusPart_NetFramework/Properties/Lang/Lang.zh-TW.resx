<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add Device" xml:space="preserve">
    <value>增加設備</value>
  </data>
  <data name="AddCOM" xml:space="preserve">
    <value>增加COM</value>
  </data>
  <data name="AddTCP" xml:space="preserve">
    <value>增加 TCP/IP</value>
  </data>
  <data name="Baudrate" xml:space="preserve">
    <value>鮑率</value>
  </data>
  <data name="COM" xml:space="preserve">
    <value>通訊埠(COM)</value>
  </data>
  <data name="COM Port Amount" xml:space="preserve">
    <value>COM通訊埠數量</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>說明</value>
  </data>
  <data name="Data Bit" xml:space="preserve">
    <value>資料位元</value>
  </data>
  <data name="Delete this Port" xml:space="preserve">
    <value>刪除此一通道</value>
  </data>
  <data name="Deletethisdevice" xml:space="preserve">
    <value>刪除此設備</value>
  </data>
  <data name="Deletethisline" xml:space="preserve">
    <value>確認刪除當前行數據？</value>
  </data>
  <data name="Device Amount" xml:space="preserve">
    <value>連綫設備數量</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>致能</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>錯誤</value>
  </data>
  <data name="ErrorRegister" xml:space="preserve">
    <value>錯誤暫存器</value>
  </data>
  <data name="Function" xml:space="preserve">
    <value>功能碼</value>
  </data>
  <data name="GatewayName" xml:space="preserve">
    <value>通訊線名稱</value>
  </data>
  <data name="IMP Slave Station" xml:space="preserve">
    <value>IMP本機從站站號</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>編號</value>
  </data>
  <data name="IP Address" xml:space="preserve">
    <value>IP地址</value>
  </data>
  <data name="IPisNull" xml:space="preserve">
    <value>未設置IP地址</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>長度</value>
  </data>
  <data name="MAddress" xml:space="preserve">
    <value>M 地址</value>
  </data>
  <data name="ModbusSetting" xml:space="preserve">
    <value>Modbus 設置</value>
  </data>
  <data name="MRegister" xml:space="preserve">
    <value>M 暫存器</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="NotCorrectIP" xml:space="preserve">
    <value>當前輸入文本為非法IP地址</value>
  </data>
  <data name="Parity" xml:space="preserve">
    <value>奇偶</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>通訊埠</value>
  </data>
  <data name="Protocol" xml:space="preserve">
    <value>通訊格式</value>
  </data>
  <data name="Range:0~255" xml:space="preserve">
    <value>範圍:0~255</value>
  </data>
  <data name="Range:1-65535" xml:space="preserve">
    <value>範圍:1-65535</value>
  </data>
  <data name="ReadLength" xml:space="preserve">
    <value>讀取最大長度</value>
  </data>
  <data name="ReadRegisterMapping" xml:space="preserve">
    <value>讀取記憶體配對</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>暫存器</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>重試次數</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>站號</value>
  </data>
  <data name="Stop Bit" xml:space="preserve">
    <value>停止位元</value>
  </data>
  <data name="TagAddress(Hex)" xml:space="preserve">
    <value>通訊地址(16進制)</value>
  </data>
  <data name="TagAmount" xml:space="preserve">
    <value>通訊地址數量</value>
  </data>
  <data name="TCP Port" xml:space="preserve">
    <value>網絡通訊埠</value>
  </data>
  <data name="TCP Port Amount" xml:space="preserve">
    <value>網絡IP通訊埠數量</value>
  </data>
  <data name="Time Out" xml:space="preserve">
    <value>逾時時間</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>類別</value>
  </data>
  <data name="Unit:ms" xml:space="preserve">
    <value>單位:毫秒</value>
  </data>
  <data name="Update Period" xml:space="preserve">
    <value>更新速度</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="WriteRegisterMapping" xml:space="preserve">
    <value>寫入記憶體配對</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
</root>